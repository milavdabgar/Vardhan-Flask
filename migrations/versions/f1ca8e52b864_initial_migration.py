"""Initial migration

Revision ID: f1ca8e52b864
Revises: 
Create Date: 2025-02-12 18:48:09.358825

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f1ca8e52b864'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('contact_number', sa.String(length=15), nullable=True),
    sa.Column('institution', sa.String(length=200), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('amc_contract',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contract_number', sa.String(length=50), nullable=False),
    sa.Column('institution', sa.String(length=100), nullable=False),
    sa.Column('contract_type', sa.String(length=50), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('contract_value', sa.Float(), nullable=False),
    sa.Column('payment_terms', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contract_number')
    )
    op.create_table('service_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticket_number', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('equipment_type', sa.String(length=50), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('assigned_to', sa.Integer(), nullable=True),
    sa.Column('institution', sa.String(length=200), nullable=False),
    sa.Column('location_details', sa.String(length=200), nullable=True),
    sa.Column('scheduled_date', sa.Date(), nullable=True),
    sa.Column('scheduled_time', sa.Time(), nullable=True),
    sa.Column('actual_visit_time', sa.DateTime(), nullable=True),
    sa.Column('visit_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('visited_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('reopened_at', sa.DateTime(), nullable=True),
    sa.Column('on_hold_at', sa.DateTime(), nullable=True),
    sa.Column('on_hold_reason', sa.Text(), nullable=True),
    sa.Column('expected_resolution_date', sa.Date(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('auto_closed', sa.Boolean(), nullable=True),
    sa.Column('reopen_deadline', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['user.id'], name='fk_sr_assigned_to'),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name='fk_sr_created_by'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticket_number')
    )
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('make', sa.String(length=50), nullable=True),
    sa.Column('model', sa.String(length=50), nullable=True),
    sa.Column('serial_number', sa.String(length=50), nullable=True),
    sa.Column('installation_date', sa.Date(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('specifications', sa.Text(), nullable=True),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['amc_contract.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('serial_number')
    )
    op.create_table('request_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_request_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('is_auto_rated', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name='fk_rf_created_by'),
    sa.ForeignKeyConstraint(['service_request_id'], ['service_request.id'], name='fk_rf_service_request'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('technician_assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('technician_id', sa.Integer(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.Column('is_senior', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['amc_contract.id'], name='fk_ta_contract'),
    sa.ForeignKeyConstraint(['technician_id'], ['user.id'], name='fk_ta_technician'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ticket_update',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_request_id', sa.Integer(), nullable=False),
    sa.Column('update_type', sa.String(length=20), nullable=True),
    sa.Column('previous_status', sa.String(length=20), nullable=True),
    sa.Column('new_status', sa.String(length=20), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['service_request_id'], ['service_request.id'], name='fk_tu_service_request'),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name='fk_tu_updated_by'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ticket_update')
    op.drop_table('technician_assignment')
    op.drop_table('request_feedback')
    op.drop_table('equipment')
    op.drop_table('service_request')
    op.drop_table('amc_contract')
    op.drop_table('user')
    # ### end Alembic commands ###
